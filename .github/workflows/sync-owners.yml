name: Sync OWNERS files on access-control.yaml change

on:
    pull_request:
        types: [closed]
        branches:
            - main
        paths:
            - 'config/access-control.yaml'

env:
  ORG_NAME: Kaustubh-pande  # <-- set your org name here

jobs:
  build-matrix:
    if: github.event.pull_request.merged == true
    name: Detect Changed Repos
    runs-on: ubuntu-latest
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: pip install pyyaml requests

      - name: Get previous access-control.yaml
        run: |
          git fetch origin main
          git show origin/main^:config/access-control.yaml > previous.yaml

      - name: Detect changed repos
        run: |
          python3 scripts/get_changed_repos.py previous.yaml config/access-control.yaml > changed_repos.json


      - name: Get active branches for changed repos
        id: set-matrix
        run: |
            matrix_json=$(python3 scripts/get_matrix_repos.py changed_repos.json | jq -c .)
            echo "matrix=$matrix_json" >> "$GITHUB_OUTPUT"
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}

  sync-owners:
    runs-on: ubuntu-latest
    needs: build-matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    steps:
      - name: Setup Git
        run: |
            git config --global user.name "github-actions"
            git config --global user.email "actions@github.com"
      - name: Checkout hack repo
        uses: actions/checkout@v4
        with:
            path: hack

      - name: Set new branch name in format <target-branch-name-hackrepo-PrNumber>
        id: branch
        run: |
            echo "name=${{ matrix.branch }}-hackrepo-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
    
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
            repository: ${{ env.ORG_NAME }}/${{ matrix.repo }}
            ref: ${{ matrix.branch }}
            token: ${{ secrets.TOKEN }}
            path: ${{ matrix.repo }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.x'
            working-directory: ${{ matrix.repo }}

      - name: Install Python dependencies
        run: |
            pip install pyyaml argparse
        working-directory: ${{ matrix.repo }}

      - name: Create branch from target and Generate OWNERS file
        run: |
            git fetch origin ${{ matrix.branch }}
            git checkout -b ${{ steps.branch.outputs.name }} origin/${{ matrix.branch }}
            python3 ../hack/scripts/generate_owners.py ${{ matrix.repo }} --access-control ../hack/config/access-control.yaml

            git add OWNERS
            git commit -m "Sync OWNERS from access-control.yaml config"
            git push origin ${{ steps.branch.outputs.name }}
        working-directory: ${{ matrix.repo }}

      - name: Create PR to update OWNERS in ${{ matrix.repo-branch.repo }}
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.TOKEN }}
          commit-message: "chore: update OWNERS file from central management"
          branch: ${{ steps.branch.outputs.name }}
          base: ${{ matrix.branch }}
          path: ${{ matrix.repo }}
          title: "Update OWNERS file"
          body: |
            This PR updates the OWNERS file in `${{ matrix.repo }}` branch `${{ matrix.branch }}`.
            The file is auto-generated by the central `owner-management` repository GitHub Action.
          working-directory: ${{ matrix.repo }}
