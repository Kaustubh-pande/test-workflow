name: Python Script Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch: # Add this to make it manually dispatchable

jobs:
  run_python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Run Python inline
        run: |
          python3 <<EOF
          import yaml, json
          
          def load_yaml(path):
              try:
                  with open(path) as f:
                      return yaml.safe_load(f) or {}
              except:
                  return {}
          
          def normalize(lst):
              return sorted(set(str(i) for i in (lst or [])))
          
          def list_changed(old, new):
              return normalize(old) != normalize(new)
          
          def changed_repos(old, new):
              if list_changed(old.get('admins', []), new.get('admins', [])):
                  return sorted((new.get('repos') or {}).keys())
              result = []
              all_repos = set((old.get('repos') or {}).keys()) | set((new.get('repos') or {}).keys())
              for repo in sorted(all_repos):
                  o = (old.get('repos') or {}).get(repo, {})
                  n = (new.get('repos') or {}).get(repo, {})
                  for key in ['reviewers', 'approvers']:
                      if list_changed(o.get(key, []), n.get(key, [])):
                          result.append(repo)
                          break
              return result
          
          old = load_yaml('previous.yaml')
          new = load_yaml('config/access-control.yaml')
          print(json.dumps(changed_repos(old, new)))
          EOF
          )
                    echo "repos=$repos" >> "$GITHUB_OUTPUT"
